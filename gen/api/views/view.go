// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// api views
//
// Command:
// $ goa gen github.com/jimmiebtlr/goav2-example/design

package views

import (
	goa "goa.design/goa"
)

// APIInfo is the viewed result type that is projected based on a view.
type APIInfo struct {
	// Type to project
	Projected *APIInfoView
	// View to render
	View string
}

// APIInfoView is a type that runs validations on a projected type.
type APIInfoView struct {
	// ID of the service
	ID *string
	// Service's name
	ServiceName *string
	// Service's version
	Version *string
}

// Validate runs the validations defined on the viewed result type APIInfo.
func (result *APIInfo) Validate() (err error) {
	switch result.View {
	case "default", "":
		err = result.Projected.Validate()
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// Validate runs the validations defined on APIInfoView using the "default"
// view.
func (result *APIInfoView) Validate() (err error) {

	return
}
